name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      - name: Setup SSH
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ec2-18-226-165-114.us-east-2.compute.amazonaws.com
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        env:
          EC2_HOST: ec2-18-226-165-114.us-east-2.compute.amazonaws.com
          EC2_USERNAME: ubuntu
        run: |
          if ! ssh -i ~/.ssh/deploy_key -o BatchMode=yes -o ConnectTimeout=5 $EC2_USERNAME@$EC2_HOST echo "SSH connection successful"; then
            echo "Failed to establish SSH connection"
            exit 1
          fi

      - name: Copy JAR to EC2
        env:
          EC2_HOST: ec2-18-226-165-114.us-east-2.compute.amazonaws.com
          EC2_USERNAME: ubuntu
        run: |
          if ! scp -i ~/.ssh/deploy_key target/kura-*.jar $EC2_USERNAME@$EC2_HOST:~/app.jar; then
            echo "Failed to copy JAR file to EC2"
            exit 1
          fi
          echo "JAR file successfully copied to EC2"

      - name: Deploy and Run
        env:
          EC2_HOST: ec2-18-226-165-114.us-east-2.compute.amazonaws.com
          EC2_USERNAME: ubuntu
        run: |
          ssh -i ~/.ssh/deploy_key $EC2_USERNAME@$EC2_HOST "bash -s" << 'EOF'
            set -e
            echo "Deployment started on $(date)"
          
            # Check for running app
            echo "Checking for existing application..."
            if ps aux | grep "[a]pp.jar"; then
              echo "Found running application"
          
              # Get PID safely
              APP_PID=$(ps aux | grep "[a]pp.jar" | awk '{print $2}')
              if [ -n "$APP_PID" ]; then
                echo "Application PID: $APP_PID"
          
                # Kill with SIGTERM first
                echo "Attempting graceful shutdown..."
                sudo kill -15 $APP_PID 2>/dev/null || echo "Failed to send SIGTERM"
          
                # Check if still running after 5 seconds
                sleep 5
                if ps -p $APP_PID > /dev/null 2>&1; then
                  echo "Application still running, using SIGKILL..."
                  sudo kill -9 $APP_PID 2>/dev/null || echo "Failed to send SIGKILL"
                  sleep 2
                else
                  echo "Application stopped successfully with SIGTERM"
                fi
              else
                echo "Could not determine PID, but will proceed anyway"
              fi
            else
              echo "No existing application found running"
            fi
          
            echo "Starting new application..."
            cd ~
            nohup java -Xmx512m -jar app.jar > app.log 2>&1 &
            sleep 5
          
            # Check if started
            if ps aux | grep "[a]pp.jar"; then
              echo "Application started successfully!"
              NEW_PID=$(ps aux | grep "[a]pp.jar" | awk '{print $2}')
              echo "New application running with PID: $NEW_PID"
          
              # Wait for health check if needed
              for i in {1..15}; do
                echo "Health check attempt $i..."
                if curl -s http://localhost:8080/actuator/health 2>&1 | grep -q "UP"; then
                  echo "Application is healthy!"
                  exit 0
                fi
                sleep 2
              done
          
              echo "Application started but health check failed. Recent logs:"
              tail -n 20 app.log
            else
              echo "Failed to start application. Recent logs:"
              tail -n 20 app.log
              exit 1
            fi

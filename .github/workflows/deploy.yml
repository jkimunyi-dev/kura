name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: ./mvnw clean package -DskipTests
        
    - name: Deploy to EC2
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      run: |
        # Setup SSH key with debug
        echo "Setting up SSH key..."
        echo "$EC2_SSH_KEY" > ssh_key.pem
        chmod 600 ssh_key.pem
        ls -la ssh_key.pem
        
        # Test SSH connection
        echo "Testing SSH connection..."
        ssh -v -o StrictHostKeyChecking=no -i ssh_key.pem ubuntu@ec2-18-226-165-114.us-east-2.compute.amazonaws.com 'echo "SSH connection successful"'
        
        if [ $? -eq 0 ]; then
          echo "SSH connection test successful, proceeding with deployment..."
          
          # Copy JAR to EC2
          echo "Copying JAR file..."
          scp -v -o StrictHostKeyChecking=no -i ssh_key.pem target/kura-*.jar ubuntu@ec2-18-226-165-114.us-east-2.compute.amazonaws.com:~/app.jar
          
          # Deploy application
          echo "Deploying application..."
          ssh -o StrictHostKeyChecking=no -i ssh_key.pem ubuntu@ec2-18-226-165-114.us-east-2.compute.amazonaws.com '
            echo "Killing existing process..."
            pid=$(pgrep -f app.jar) && kill -9 $pid || true
            
            echo "Starting application..."
            nohup java -jar app.jar > app.log 2>&1 &
            
            echo "Waiting for application to start..."
            sleep 10
            if pgrep -f app.jar > /dev/null; then
              echo "Application deployed successfully"
            else
              echo "Application failed to start"
              exit 1
            fi
          '
        else
          echo "SSH connection test failed"
          exit 1
        fi
